'use strict';

var _stringify = require('babel-runtime/core-js/json/stringify');

var _stringify2 = _interopRequireDefault(_stringify);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

//var path = require('path')
var SourceNode = require('source-map').SourceNode;
var loaderUtils = require('loader-utils');

module.exports = function (content, map) {
  this.cacheable();

  var sourceNode;
  var id = this.options.name;

  if (!id) {
    this.callback(null, content, map);
  }

  if (map) {
    sourceNode = SourceNode.fromSourceWithMap(content, map);
  } else {
    var fileName = loaderUtils.getRemainingRequest(this);

    sourceNode = new SourceNode(null, null, null);
    content.split('\n').forEach(function (line, idx) {
      sourceNode.add(new SourceNode(idx + 1, 0, fileName, line + '\n'));
    });
    sourceNode.setSourceContent(fileName, content);
  }

  var concatSrc = new SourceNode();

  concatSrc.add(['describe(' + (0, _stringify2.default)(id) + ', function() {\n', sourceNode, '\n});']);

  var result = concatSrc.toStringWithSourceMap();

  this.callback(undefined, result.code, result.map.toString());
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1vY2hhLWVudi1sb2FkZXIuanMiXSwibmFtZXMiOlsiU291cmNlTm9kZSIsInJlcXVpcmUiLCJsb2FkZXJVdGlscyIsIm1vZHVsZSIsImV4cG9ydHMiLCJjb250ZW50IiwibWFwIiwiY2FjaGVhYmxlIiwic291cmNlTm9kZSIsImlkIiwib3B0aW9ucyIsIm5hbWUiLCJjYWxsYmFjayIsImZyb21Tb3VyY2VXaXRoTWFwIiwiZmlsZU5hbWUiLCJnZXRSZW1haW5pbmdSZXF1ZXN0Iiwic3BsaXQiLCJmb3JFYWNoIiwibGluZSIsImlkeCIsImFkZCIsInNldFNvdXJjZUNvbnRlbnQiLCJjb25jYXRTcmMiLCJyZXN1bHQiLCJ0b1N0cmluZ1dpdGhTb3VyY2VNYXAiLCJ1bmRlZmluZWQiLCJjb2RlIiwidG9TdHJpbmciXSwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQUE7QUFDQSxJQUFJQSxhQUFhQyxRQUFRLFlBQVIsRUFBc0JELFVBQXZDO0FBQ0EsSUFBSUUsY0FBY0QsUUFBUSxjQUFSLENBQWxCOztBQUVBRSxPQUFPQyxPQUFQLEdBQWlCLFVBQVNDLE9BQVQsRUFBa0JDLEdBQWxCLEVBQXVCO0FBQ3RDLE9BQUtDLFNBQUw7O0FBRUEsTUFBSUMsVUFBSjtBQUNBLE1BQUlDLEtBQUssS0FBS0MsT0FBTCxDQUFhQyxJQUF0Qjs7QUFFQSxNQUFJLENBQUNGLEVBQUwsRUFBUztBQUNQLFNBQUtHLFFBQUwsQ0FBYyxJQUFkLEVBQW9CUCxPQUFwQixFQUE2QkMsR0FBN0I7QUFDRDs7QUFFRCxNQUFJQSxHQUFKLEVBQVM7QUFDUEUsaUJBQWFSLFdBQVdhLGlCQUFYLENBQTZCUixPQUE3QixFQUFzQ0MsR0FBdEMsQ0FBYjtBQUNELEdBRkQsTUFFTztBQUNMLFFBQUlRLFdBQVdaLFlBQVlhLG1CQUFaLENBQWdDLElBQWhDLENBQWY7O0FBRUFQLGlCQUFhLElBQUlSLFVBQUosQ0FBZSxJQUFmLEVBQXFCLElBQXJCLEVBQTJCLElBQTNCLENBQWI7QUFDQUssWUFBUVcsS0FBUixDQUFjLElBQWQsRUFBb0JDLE9BQXBCLENBQTRCLFVBQVNDLElBQVQsRUFBZUMsR0FBZixFQUFvQjtBQUM5Q1gsaUJBQVdZLEdBQVgsQ0FBZSxJQUFJcEIsVUFBSixDQUFlbUIsTUFBTSxDQUFyQixFQUF3QixDQUF4QixFQUEyQkwsUUFBM0IsRUFBcUNJLE9BQU8sSUFBNUMsQ0FBZjtBQUNELEtBRkQ7QUFHQVYsZUFBV2EsZ0JBQVgsQ0FBNEJQLFFBQTVCLEVBQXNDVCxPQUF0QztBQUNEOztBQUVELE1BQUlpQixZQUFZLElBQUl0QixVQUFKLEVBQWhCOztBQUVBc0IsWUFBVUYsR0FBVixDQUFjLENBQ1osY0FBYyx5QkFBZVgsRUFBZixDQUFkLEdBQW1DLGtCQUR2QixFQUMyQ0QsVUFEM0MsRUFDdUQsT0FEdkQsQ0FBZDs7QUFJQSxNQUFJZSxTQUFTRCxVQUFVRSxxQkFBVixFQUFiOztBQUVBLE9BQUtaLFFBQUwsQ0FBY2EsU0FBZCxFQUF5QkYsT0FBT0csSUFBaEMsRUFBc0NILE9BQU9qQixHQUFQLENBQVdxQixRQUFYLEVBQXRDO0FBQ0QsQ0EvQkQiLCJmaWxlIjoibW9jaGEtZW52LWxvYWRlci5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8vdmFyIHBhdGggPSByZXF1aXJlKCdwYXRoJylcclxudmFyIFNvdXJjZU5vZGUgPSByZXF1aXJlKCdzb3VyY2UtbWFwJykuU291cmNlTm9kZVxyXG52YXIgbG9hZGVyVXRpbHMgPSByZXF1aXJlKCdsb2FkZXItdXRpbHMnKVxyXG5cclxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbihjb250ZW50LCBtYXApIHtcclxuICB0aGlzLmNhY2hlYWJsZSgpXHJcblxyXG4gIHZhciBzb3VyY2VOb2RlXHJcbiAgdmFyIGlkID0gdGhpcy5vcHRpb25zLm5hbWVcclxuXHJcbiAgaWYgKCFpZCkge1xyXG4gICAgdGhpcy5jYWxsYmFjayhudWxsLCBjb250ZW50LCBtYXApXHJcbiAgfVxyXG5cclxuICBpZiAobWFwKSB7XHJcbiAgICBzb3VyY2VOb2RlID0gU291cmNlTm9kZS5mcm9tU291cmNlV2l0aE1hcChjb250ZW50LCBtYXApXHJcbiAgfSBlbHNlIHtcclxuICAgIHZhciBmaWxlTmFtZSA9IGxvYWRlclV0aWxzLmdldFJlbWFpbmluZ1JlcXVlc3QodGhpcylcclxuXHJcbiAgICBzb3VyY2VOb2RlID0gbmV3IFNvdXJjZU5vZGUobnVsbCwgbnVsbCwgbnVsbClcclxuICAgIGNvbnRlbnQuc3BsaXQoJ1xcbicpLmZvckVhY2goZnVuY3Rpb24obGluZSwgaWR4KSB7XHJcbiAgICAgIHNvdXJjZU5vZGUuYWRkKG5ldyBTb3VyY2VOb2RlKGlkeCArIDEsIDAsIGZpbGVOYW1lLCBsaW5lICsgJ1xcbicpKVxyXG4gICAgfSlcclxuICAgIHNvdXJjZU5vZGUuc2V0U291cmNlQ29udGVudChmaWxlTmFtZSwgY29udGVudClcclxuICB9XHJcblxyXG4gIHZhciBjb25jYXRTcmMgPSBuZXcgU291cmNlTm9kZSgpXHJcblxyXG4gIGNvbmNhdFNyYy5hZGQoW1xyXG4gICAgJ2Rlc2NyaWJlKCcgKyBKU09OLnN0cmluZ2lmeShpZCkgKyAnLCBmdW5jdGlvbigpIHtcXG4nLCBzb3VyY2VOb2RlLCAnXFxufSk7J1xyXG4gIF0pXHJcblxyXG4gIHZhciByZXN1bHQgPSBjb25jYXRTcmMudG9TdHJpbmdXaXRoU291cmNlTWFwKClcclxuXHJcbiAgdGhpcy5jYWxsYmFjayh1bmRlZmluZWQsIHJlc3VsdC5jb2RlLCByZXN1bHQubWFwLnRvU3RyaW5nKCkpXHJcbn1cclxuIl19